cluster = {
  "ceph1" => { :cpus => 2, :mem => 2048, :ip => "192.168.55.101" },
  "ceph2" => { :cpus => 2, :mem => 2048, :ip => "192.168.55.102" },
  "ceph3" => { :cpus => 2, :mem => 2048, :ip => "192.168.55.103" },
}

Vagrant.configure("2") do |config|
  cluster.each_with_index do |(hostname, info), i|

    config.vm.box_check_update = false

    config.vm.synced_folder ".", "/vagrant", type: "rsync",
      rsync__exclude: ".vagrant"

    config.trigger.before :up do |t|
        t.info = "generate ssh keys"
        t.run = {path: "gen-ssh-key.sh"}
    end

    config.trigger.after :up do |t|
        t.info = "deploy ceph octopus"
        t.run = {path: "deploy-ceph.sh"}
    end

    config.vm.define hostname do |node|
      # base box
      node.vm.box = "centos77"

      # hostname
      node.vm.hostname = hostname

      # parallels provider
      node.vm.provider "parallels" do |p|
        p.cpus = info[:cpus]
        p.memory = info[:mem]
      end
      # network
      node.vm.network "private_network", ip: info[:ip]

      node.trigger.before :provisioner_run, type: :hook do |t|
        t.info = "add extra disks for osd nodes"
        node.vm.provider "parallels" do |p|
            (0..2).each do |d|
                p.customize ["set", :id, "--device-add", "hdd", "--iface", "sata"]
            end
        end
      end

      # provision
      node.vm.provision "shell", inline: "sudo /bin/bash /vagrant/bootstrap.sh"

    end

  end
end
